.btnAddDiv{
    display: block;
    margin: auto;
    margin-top: 10px;
    font-size: 1.2em;
    padding: 10px;
    border-radius: 5px;
    outline: none;
    border: 1px solid black;
    transition: ease 200ms;
}
.btnAddDiv:hover{
    cursor: pointer;
    opacity: 0.7;
}

.blocoToDo{
    position: absolute;
    background-color: #e8f3ff;
    display: flex;
    flex-direction: column;
    /* align-items: center;
    justify-content: center; */
    transition: transform 0.2s ease;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    padding: 10px;
    /* width: auto; */
}
.novaAnimacao{
    position: absolute;
    transition: top 0.3s ease, left 0.3s ease;
}
.blocoToDo > span{
    width: auto;
    height: 50px;
    display: block;
    margin: -10px -10px 10px -10px;
    border-top-right-radius: 10px;
    border-top-left-radius: 10px;
    background-color: rgb(180, 210, 218);
    box-shadow: 1px 1px 2px 1px rgba(89, 125, 134, 0.637);
    position: relative;
}
.blocoToDo > .input-group .titulo{
    background-color: rgb(230, 230, 230);
    font-size: 1.3em;
    outline: none;
    border: none;
    margin: 2px;
    margin-bottom: 5px;
    padding: 10px 60px 10px 60px;
    /* padding-right: 60px; */
    border-radius: 20px;
    text-align: center;
    color: black;
}
.input-group{
    position: relative;
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}
.blocoToDo > div .addRemove{

    font-size: 1.3em;
    outline: none;
    border: none;
    margin: 2px;
    cursor: pointer;
    margin-left: -50px;
    margin-bottom: 5px;
    padding: 10px;
    border-radius: 20px;
    text-align: center;
}
.addRemove{
    background-color: rgb(228, 42, 42);
    color: white;
    transition: ease 150ms;
    /* transition: transform 0.1s, box-shadow 0.1s; */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.addRemove:hover{
    cursor: pointer;
    background-color: rgb(189, 36, 36);
    /* box-shadow: 1px 1px 1px black; */
}
.addRemove:active {
    transform: translateY(2px); /* Move o botão para baixo */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Reduz a sombra */
}
.add{
    background-color: rgb(43, 138, 43);
    color: white;
}
.add:hover{
    background-color: rgb(35, 110, 35);
}
.add:active {
    transform: translateY(2px); /* Move o botão para baixo */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Reduz a sombra */
}
.elementosTarefa{
    display: flex;
    margin-bottom: 10px;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.61);
    align-items: center;
    border-radius: 20px;
    justify-content: space-between;
    padding: 10px;
}
.elementosTarefa > input[type=text]{
    position: relative;
    font-size: 1.2em;
    background: none;
    outline: none;
    border: none;
    color: black;
    padding: 5px;
}
.finalizado{
    text-decoration: line-through;
    color: red;
    
    
}
.finalizado::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 50%; /* Ajusta a posição vertical da linha */
    height: 4px; /* Espessura da linha */
    background-color: blue; /* Cor da linha */
}
.normal{
    text-decoration: none;
}
.check-container{
    display: flex;
    align-items: center;
}
.elementosTarefa .checkb{
    /* display: none; */
}

.tarefasBloc{
    padding: 20px;
    overflow: auto;
}
.btnRTarefa{
    font-size: 1.2em;
    color: rgb(59, 59, 59);
    font-weight: bold;
    border: none;
    outline: none;
    background-color: white;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 30px;
    height: 30px;
    border-radius: 20px;
    cursor: pointer;
    transition: ease 200ms;
}
.btnRTarefa:hover{
    background-color: rgb(221, 218, 211);
    box-shadow: 1px 1px 1px rgba(36, 36, 36, 0.671);
    color: rgb(124, 124, 124);
}

.no-select {
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none;    /* Firefox */
    -ms-user-select: none;     /* IE 10+ */
    user-select: none;         /* Padrão */
  }
  
  .dragging {
    animation: holdAnimation 0.3s forwards; /* Animação ao segurar */
    transform: scale(1.05);
  }
  
  @keyframes holdAnimation {
    from {
      transform: scale(1);
    }
    to {
      transform: scale(1.05); /* Aumenta levemente ao segurar */
    }
  }
  
  .release {
    animation: releaseAnimation 0.3s forwards; /* Animação ao soltar */
    transform: scale(1);
    transition: transform 0.3s ease;
  }
  
  @keyframes releaseAnimation {
    from {
      transform: scale(1.05);
    }
    to {
      transform: scale(1); /* Retorna ao tamanho original */
    }
  }