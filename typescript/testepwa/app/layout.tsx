import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  manifest: "/manifest.webmanifest",
  icons: {
    icon: "/github-128x128.png"
  }
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="pt-BR">
      <head>
        <meta name="theme-color" content="#000000" />
        <link rel="manifest" href="/manifest.webmanifest" />
        <link rel="apple-touch-icon" href="/github-128x128.png" />
        <meta  name="apple-mobile-web-app-capable" content="yes"/>
        <meta  name="apple-mobile-web-app-status-bar-style" content="black"/>
        <meta  name="apple-mobile-web-app-title" content="MeuApp"/>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        {/* registrador do Service Worker */}
        <script 
          dangerouslySetInnerHTML={{
            __html: `
              if('serviceWorker' in navigator){
                window.addEventListener('load', () => {
                  navigator.serviceWorker.register('/sw.js')
                  .then(reg => console.log('SW registrado com sucesso:', reg))
                  .catch(err => console.log('Falha ao registrar SW:', err));
                });
              }
            `
          }}
        />
      </body>
    </html>
  );
}
